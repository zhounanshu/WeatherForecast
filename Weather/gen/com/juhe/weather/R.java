/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.juhe.weather;

public final class R {
    public static final class attr {
        /**  BELOW HERE ARE DEPRECEATED. DO NOT USE. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int ptrAdapterViewBackground=0x7f01000e;
        /**  Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header 
 <attr name="ptrSubHeaderTextAppearance" format="reference" /> 
 Style of Animation should be used displayed when pulling. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>rotate</code></td><td>0x0</td><td></td></tr>
<tr><td><code>flip</code></td><td>0x1</td><td></td></tr>
</table>
         */
        public static final int ptrAnimationStyle=0x7f01000a;
        /**  Drawable to use as Loading Indicator. Changes both Header and Footer. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ptrDrawable=0x7f010005;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ptrDrawableBottom=0x7f010010;
        /**  Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ptrDrawableEnd=0x7f010007;
        /**  Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ptrDrawableStart=0x7f010006;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ptrDrawableTop=0x7f01000f;
        /**  A drawable to use as the background of the Header and Footer Loading Views 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int ptrHeaderBackground=0x7f010001;
        /**  Base text color, typeface, size, and style for Header and Footer Loading Views 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ptrHeaderTextAppearance=0x7f010009;
        /**  Text Color of the Header and Footer Loading Views 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int ptrHeaderTextColor=0x7f010002;
        /** 
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
         */
        public static final int ptrListViewExtrasEnabled=0x7f01000c;
        /**  Text Color of the Header and Footer Loading Views Sub Header 
       <attr name="ptrHeaderSubTextColor" format="reference|color" />  
 Mode of Pull-to-Refresh that should be used 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>0x0</td><td></td></tr>
<tr><td><code>pullFromStart</code></td><td>0x1</td><td></td></tr>
<tr><td><code>pullFromEnd</code></td><td>0x2</td><td></td></tr>
<tr><td><code>both</code></td><td>0x3</td><td></td></tr>
<tr><td><code>manualOnly</code></td><td>0x4</td><td></td></tr>
<tr><td><code>pullDownFromTop</code></td><td>0x1</td><td> These last two are depreacted </td></tr>
<tr><td><code>pullUpFromBottom</code></td><td>0x2</td><td></td></tr>
</table>
         */
        public static final int ptrMode=0x7f010003;
        /**  Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
         */
        public static final int ptrOverScroll=0x7f010008;
        /**  A drawable to use as the background of the Refreshable View 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int ptrRefreshableViewBackground=0x7f010000;
        /** 
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
         */
        public static final int ptrRotateDrawableWhilePulling=0x7f01000d;
        /**  Whether the user can scroll while the View is Refreshing 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
         */
        public static final int ptrScrollingWhileRefreshingEnabled=0x7f01000b;
        /**  Whether the Indicator overlay(s) should be used 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
         */
        public static final int ptrShowIndicator=0x7f010004;
    }
    public static final class color {
        public static final int blue=0x7f040004;
        public static final int dark_grey=0x7f040001;
        public static final int frame_color=0x7f040002;
        public static final int light_grey=0x7f040000;
        /**      <color name="text_color">#666666</color> 
         */
        public static final int text_color=0x7f040003;
    }
    public static final class dimen {
        public static final int header_footer_left_right_padding=0x7f050003;
        public static final int header_footer_top_bottom_padding=0x7f050004;
        public static final int indicator_corner_radius=0x7f050001;
        public static final int indicator_internal_padding=0x7f050002;
        public static final int indicator_right_padding=0x7f050000;
    }
    public static final class drawable {
        public static final int arrow=0x7f020000;
        public static final int back=0x7f020001;
        public static final int d00=0x7f020002;
        public static final int d01=0x7f020003;
        public static final int d02=0x7f020004;
        public static final int d03=0x7f020005;
        public static final int d04=0x7f020006;
        public static final int d05=0x7f020007;
        public static final int d06=0x7f020008;
        public static final int d07=0x7f020009;
        public static final int d08=0x7f02000a;
        public static final int d09=0x7f02000b;
        public static final int d10=0x7f02000c;
        public static final int d11=0x7f02000d;
        public static final int d12=0x7f02000e;
        public static final int d13=0x7f02000f;
        public static final int d14=0x7f020010;
        public static final int d15=0x7f020011;
        public static final int d16=0x7f020012;
        public static final int d17=0x7f020013;
        public static final int d18=0x7f020014;
        public static final int d19=0x7f020015;
        public static final int d20=0x7f020016;
        public static final int d21=0x7f020017;
        public static final int d22=0x7f020018;
        public static final int d23=0x7f020019;
        public static final int d24=0x7f02001a;
        public static final int d25=0x7f02001b;
        public static final int d26=0x7f02001c;
        public static final int d27=0x7f02001d;
        public static final int d28=0x7f02001e;
        public static final int d29=0x7f02001f;
        public static final int d30=0x7f020020;
        public static final int d31=0x7f020021;
        public static final int d53=0x7f020022;
        public static final int default_ptr_flip=0x7f020023;
        public static final int ic_launcher=0x7f020024;
        public static final int loading=0x7f020025;
        public static final int n00=0x7f020026;
        public static final int n01=0x7f020027;
        public static final int n02=0x7f020028;
        public static final int n03=0x7f020029;
        public static final int n04=0x7f02002a;
        public static final int n05=0x7f02002b;
        public static final int n06=0x7f02002c;
        public static final int n07=0x7f02002d;
        public static final int n08=0x7f02002e;
        public static final int n09=0x7f02002f;
        public static final int n10=0x7f020030;
        public static final int n11=0x7f020031;
        public static final int n12=0x7f020032;
        public static final int n13=0x7f020033;
        public static final int n14=0x7f020034;
        public static final int n15=0x7f020035;
        public static final int n16=0x7f020036;
        public static final int n17=0x7f020037;
        public static final int n18=0x7f020038;
        public static final int n19=0x7f020039;
        public static final int n20=0x7f02003a;
        public static final int n21=0x7f02003b;
        public static final int n22=0x7f02003c;
        public static final int n23=0x7f02003d;
        public static final int n24=0x7f02003e;
        public static final int n25=0x7f02003f;
        public static final int n26=0x7f020040;
        public static final int n27=0x7f020041;
        public static final int n28=0x7f020042;
        public static final int n29=0x7f020043;
        public static final int n30=0x7f020044;
        public static final int n31=0x7f020045;
        public static final int n53=0x7f020046;
        public static final int progressbar=0x7f020047;
        public static final int wireframe_dark=0x7f020048;
        public static final int wireframe_light=0x7f020049;
    }
    public static final class id {
        public static final int both=0x7f060001;
        public static final int disabled=0x7f060002;
        public static final int fl_inner=0x7f06003a;
        public static final int flip=0x7f060008;
        public static final int iv_back=0x7f06000a;
        public static final int iv_fourth_weather=0x7f060032;
        public static final int iv_next_fifteen=0x7f06001f;
        public static final int iv_next_nine=0x7f06001d;
        public static final int iv_next_six=0x7f06001c;
        public static final int iv_next_three=0x7f06001b;
        public static final int iv_next_twelve=0x7f06001e;
        public static final int iv_now_weather=0x7f060010;
        public static final int iv_third_weather=0x7f06002e;
        public static final int iv_today_weather=0x7f060026;
        public static final int iv_tommrow_weather=0x7f06002a;
        public static final int lv_city=0x7f06000b;
        public static final int manualOnly=0x7f060003;
        public static final int pullDownFromTop=0x7f060004;
        public static final int pullFromEnd=0x7f060005;
        public static final int pullFromStart=0x7f060006;
        public static final int pullUpFromBottom=0x7f060007;
        public static final int pull_refresh_scrollview=0x7f06000c;
        public static final int pull_to_refresh_progress=0x7f06003b;
        public static final int pull_to_refresh_text=0x7f06003c;
        public static final int rl_city=0x7f06000d;
        public static final int rotate=0x7f060009;
        public static final int scrollview=0x7f060000;
        public static final int tv_aqi=0x7f060014;
        public static final int tv_city=0x7f06000e;
        public static final int tv_dressing_index=0x7f060039;
        public static final int tv_felt_air_quality=0x7f060035;
        public static final int tv_fourth_day=0x7f060031;
        public static final int tv_fourth_temp_a=0x7f060033;
        public static final int tv_fourth_temp_b=0x7f060034;
        public static final int tv_humidity=0x7f060036;
        public static final int tv_next_fifteen=0x7f06001a;
        public static final int tv_next_fifteen_tmp=0x7f060024;
        public static final int tv_next_nine=0x7f060018;
        public static final int tv_next_nine_tmp=0x7f060022;
        public static final int tv_next_six=0x7f060017;
        public static final int tv_next_six_temp=0x7f060021;
        public static final int tv_next_three=0x7f060016;
        public static final int tv_next_three_temp=0x7f060020;
        public static final int tv_next_today=0x7f060025;
        public static final int tv_next_twelve=0x7f060019;
        public static final int tv_next_twelve_tmp=0x7f060023;
        public static final int tv_now_temp=0x7f060013;
        public static final int tv_now_weather=0x7f060011;
        public static final int tv_quality=0x7f060015;
        public static final int tv_release=0x7f06000f;
        public static final int tv_third_day=0x7f06002d;
        public static final int tv_third_temp_a=0x7f06002f;
        public static final int tv_third_temp_b=0x7f060030;
        public static final int tv_today_temp=0x7f060012;
        public static final int tv_today_temp_a=0x7f060027;
        public static final int tv_tody_temp_b=0x7f060028;
        public static final int tv_tommrow=0x7f060029;
        public static final int tv_tommrow_temp_a=0x7f06002b;
        public static final int tv_tommrow_temp_b=0x7f06002c;
        public static final int tv_uv_index=0x7f060038;
        public static final int tv_wind=0x7f060037;
    }
    public static final class layout {
        public static final int activity_city=0x7f030000;
        public static final int activity_weather=0x7f030001;
        public static final int item_city_list=0x7f030002;
        public static final int pull_to_refresh_header_vertical=0x7f030003;
    }
    public static final class string {
        public static final int app_name=0x7f070000;
        public static final int default_text=0x7f070004;
        public static final int dressing_index=0x7f07000b;
        public static final int felt_air_temp=0x7f070007;
        public static final int filler_text=0x7f070013;
        public static final int forecast=0x7f070005;
        public static final int humidity=0x7f070008;
        public static final int information=0x7f070006;
        public static final int pm=0x7f070003;
        public static final int pull_to_refresh_from_bottom_pull_label=0x7f070010;
        public static final int pull_to_refresh_from_bottom_refreshing_label=0x7f070012;
        public static final int pull_to_refresh_from_bottom_release_label=0x7f070011;
        /**  Just use standard Pull Down String when pulling up. These can be set for languages which require it 
         */
        public static final int pull_to_refresh_pull_label=0x7f07000d;
        public static final int pull_to_refresh_refreshing_label=0x7f07000f;
        public static final int pull_to_refresh_release_label=0x7f07000e;
        public static final int test_city=0x7f070001;
        public static final int title_city=0x7f07000c;
        public static final int today=0x7f070002;
        public static final int uv_index=0x7f07000a;
        public static final int wind=0x7f070009;
    }
    public static final class style {
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        

        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.
    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 
         */
        public static final int AppBaseTheme=0x7f080000;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f080001;
        public static final int TextViewStyle=0x7f080003;
        public static final int ViewStyle=0x7f080002;
    }
    public static final class styleable {
        /** Attributes that can be used with a PullToRefresh.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PullToRefresh_ptrAdapterViewBackground com.juhe.weather:ptrAdapterViewBackground}</code></td><td> BELOW HERE ARE DEPRECEATED.</td></tr>
           <tr><td><code>{@link #PullToRefresh_ptrAnimationStyle com.juhe.weather:ptrAnimationStyle}</code></td><td> Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header 
 <attr name="ptrSubHeaderTextAppearance" format="reference" /> 
 Style of Animation should be used displayed when pulling.</td></tr>
           <tr><td><code>{@link #PullToRefresh_ptrDrawable com.juhe.weather:ptrDrawable}</code></td><td> Drawable to use as Loading Indicator.</td></tr>
           <tr><td><code>{@link #PullToRefresh_ptrDrawableBottom com.juhe.weather:ptrDrawableBottom}</code></td><td></td></tr>
           <tr><td><code>{@link #PullToRefresh_ptrDrawableEnd com.juhe.weather:ptrDrawableEnd}</code></td><td> Drawable to use as Loading Indicator in the Footer View.</td></tr>
           <tr><td><code>{@link #PullToRefresh_ptrDrawableStart com.juhe.weather:ptrDrawableStart}</code></td><td> Drawable to use as Loading Indicator in the Header View.</td></tr>
           <tr><td><code>{@link #PullToRefresh_ptrDrawableTop com.juhe.weather:ptrDrawableTop}</code></td><td></td></tr>
           <tr><td><code>{@link #PullToRefresh_ptrHeaderBackground com.juhe.weather:ptrHeaderBackground}</code></td><td> A drawable to use as the background of the Header and Footer Loading Views </td></tr>
           <tr><td><code>{@link #PullToRefresh_ptrHeaderTextAppearance com.juhe.weather:ptrHeaderTextAppearance}</code></td><td> Base text color, typeface, size, and style for Header and Footer Loading Views </td></tr>
           <tr><td><code>{@link #PullToRefresh_ptrHeaderTextColor com.juhe.weather:ptrHeaderTextColor}</code></td><td> Text Color of the Header and Footer Loading Views </td></tr>
           <tr><td><code>{@link #PullToRefresh_ptrListViewExtrasEnabled com.juhe.weather:ptrListViewExtrasEnabled}</code></td><td>
        	Whether PullToRefreshListView has it's extras enabled.</td></tr>
           <tr><td><code>{@link #PullToRefresh_ptrMode com.juhe.weather:ptrMode}</code></td><td> Text Color of the Header and Footer Loading Views Sub Header 
       <attr name="ptrHeaderSubTextColor" format="reference|color" />  
 Mode of Pull-to-Refresh that should be used </td></tr>
           <tr><td><code>{@link #PullToRefresh_ptrOverScroll com.juhe.weather:ptrOverScroll}</code></td><td> Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh.</td></tr>
           <tr><td><code>{@link #PullToRefresh_ptrRefreshableViewBackground com.juhe.weather:ptrRefreshableViewBackground}</code></td><td> A drawable to use as the background of the Refreshable View </td></tr>
           <tr><td><code>{@link #PullToRefresh_ptrRotateDrawableWhilePulling com.juhe.weather:ptrRotateDrawableWhilePulling}</code></td><td>
        	Whether the Drawable should be continually rotated as you pull.</td></tr>
           <tr><td><code>{@link #PullToRefresh_ptrScrollingWhileRefreshingEnabled com.juhe.weather:ptrScrollingWhileRefreshingEnabled}</code></td><td> Whether the user can scroll while the View is Refreshing </td></tr>
           <tr><td><code>{@link #PullToRefresh_ptrShowIndicator com.juhe.weather:ptrShowIndicator}</code></td><td> Whether the Indicator overlay(s) should be used </td></tr>
           </table>
           @see #PullToRefresh_ptrAdapterViewBackground
           @see #PullToRefresh_ptrAnimationStyle
           @see #PullToRefresh_ptrDrawable
           @see #PullToRefresh_ptrDrawableBottom
           @see #PullToRefresh_ptrDrawableEnd
           @see #PullToRefresh_ptrDrawableStart
           @see #PullToRefresh_ptrDrawableTop
           @see #PullToRefresh_ptrHeaderBackground
           @see #PullToRefresh_ptrHeaderTextAppearance
           @see #PullToRefresh_ptrHeaderTextColor
           @see #PullToRefresh_ptrListViewExtrasEnabled
           @see #PullToRefresh_ptrMode
           @see #PullToRefresh_ptrOverScroll
           @see #PullToRefresh_ptrRefreshableViewBackground
           @see #PullToRefresh_ptrRotateDrawableWhilePulling
           @see #PullToRefresh_ptrScrollingWhileRefreshingEnabled
           @see #PullToRefresh_ptrShowIndicator
         */
        public static final int[] PullToRefresh = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b,
            0x7f01000c, 0x7f01000d, 0x7f01000e, 0x7f01000f,
            0x7f010010
        };
        /**
          <p>
          @attr description
           BELOW HERE ARE DEPRECEATED. DO NOT USE. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.juhe.weather:ptrAdapterViewBackground
        */
        public static final int PullToRefresh_ptrAdapterViewBackground = 14;
        /**
          <p>
          @attr description
           Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header 
 <attr name="ptrSubHeaderTextAppearance" format="reference" /> 
 Style of Animation should be used displayed when pulling. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>rotate</code></td><td>0x0</td><td></td></tr>
<tr><td><code>flip</code></td><td>0x1</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.juhe.weather:ptrAnimationStyle
        */
        public static final int PullToRefresh_ptrAnimationStyle = 10;
        /**
          <p>
          @attr description
           Drawable to use as Loading Indicator. Changes both Header and Footer. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.juhe.weather:ptrDrawable
        */
        public static final int PullToRefresh_ptrDrawable = 5;
        /**
          <p>This symbol is the offset where the {@link com.juhe.weather.R.attr#ptrDrawableBottom}
          attribute's value can be found in the {@link #PullToRefresh} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.juhe.weather:ptrDrawableBottom
        */
        public static final int PullToRefresh_ptrDrawableBottom = 16;
        /**
          <p>
          @attr description
           Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.juhe.weather:ptrDrawableEnd
        */
        public static final int PullToRefresh_ptrDrawableEnd = 7;
        /**
          <p>
          @attr description
           Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.juhe.weather:ptrDrawableStart
        */
        public static final int PullToRefresh_ptrDrawableStart = 6;
        /**
          <p>This symbol is the offset where the {@link com.juhe.weather.R.attr#ptrDrawableTop}
          attribute's value can be found in the {@link #PullToRefresh} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.juhe.weather:ptrDrawableTop
        */
        public static final int PullToRefresh_ptrDrawableTop = 15;
        /**
          <p>
          @attr description
           A drawable to use as the background of the Header and Footer Loading Views 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.juhe.weather:ptrHeaderBackground
        */
        public static final int PullToRefresh_ptrHeaderBackground = 1;
        /**
          <p>
          @attr description
           Base text color, typeface, size, and style for Header and Footer Loading Views 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.juhe.weather:ptrHeaderTextAppearance
        */
        public static final int PullToRefresh_ptrHeaderTextAppearance = 9;
        /**
          <p>
          @attr description
           Text Color of the Header and Footer Loading Views 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.juhe.weather:ptrHeaderTextColor
        */
        public static final int PullToRefresh_ptrHeaderTextColor = 2;
        /**
          <p>
          @attr description
          
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
          <p>This is a private symbol.
          @attr name com.juhe.weather:ptrListViewExtrasEnabled
        */
        public static final int PullToRefresh_ptrListViewExtrasEnabled = 12;
        /**
          <p>
          @attr description
           Text Color of the Header and Footer Loading Views Sub Header 
       <attr name="ptrHeaderSubTextColor" format="reference|color" />  
 Mode of Pull-to-Refresh that should be used 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>0x0</td><td></td></tr>
<tr><td><code>pullFromStart</code></td><td>0x1</td><td></td></tr>
<tr><td><code>pullFromEnd</code></td><td>0x2</td><td></td></tr>
<tr><td><code>both</code></td><td>0x3</td><td></td></tr>
<tr><td><code>manualOnly</code></td><td>0x4</td><td></td></tr>
<tr><td><code>pullDownFromTop</code></td><td>0x1</td><td> These last two are depreacted </td></tr>
<tr><td><code>pullUpFromBottom</code></td><td>0x2</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.juhe.weather:ptrMode
        */
        public static final int PullToRefresh_ptrMode = 3;
        /**
          <p>
          @attr description
           Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
          <p>This is a private symbol.
          @attr name com.juhe.weather:ptrOverScroll
        */
        public static final int PullToRefresh_ptrOverScroll = 8;
        /**
          <p>
          @attr description
           A drawable to use as the background of the Refreshable View 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.juhe.weather:ptrRefreshableViewBackground
        */
        public static final int PullToRefresh_ptrRefreshableViewBackground = 0;
        /**
          <p>
          @attr description
          
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
          <p>This is a private symbol.
          @attr name com.juhe.weather:ptrRotateDrawableWhilePulling
        */
        public static final int PullToRefresh_ptrRotateDrawableWhilePulling = 13;
        /**
          <p>
          @attr description
           Whether the user can scroll while the View is Refreshing 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
          <p>This is a private symbol.
          @attr name com.juhe.weather:ptrScrollingWhileRefreshingEnabled
        */
        public static final int PullToRefresh_ptrScrollingWhileRefreshingEnabled = 11;
        /**
          <p>
          @attr description
           Whether the Indicator overlay(s) should be used 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
          <p>This is a private symbol.
          @attr name com.juhe.weather:ptrShowIndicator
        */
        public static final int PullToRefresh_ptrShowIndicator = 4;
    };
}
